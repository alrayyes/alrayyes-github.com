<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Higher Learning</title>
  <subtitle>Make yourself comfortable</subtitle>
  <id>http://www.higherlearning.eu/</id>
  <link href="http://www.higherlearning.eu/"/>
  <link href="http://www.higherlearning.eu/feed.xml" rel="self"/>
  <updated>2015-05-08T18:45:00+00:00</updated>
  <author>
    <name>Ryan Kes</name>
  </author>
  <entry>
    <title>How To Install FreeBSD 10.1 On A 2006 Macbook</title>
    <link rel="alternate" href="/2015/05/08/how-to-install-freebsd-10-1-on-a-2006-macbook.html"/>
    <id>/2015/05/08/how-to-install-freebsd-10-1-on-a-2006-macbook.html</id>
    <published>2015-05-08T18:45:00+00:00</published>
    <updated>2015-05-08T18:45:00+00:00</updated>
    <author>
      <name>Ryan Kes</name>
    </author>
    <content type="html">&lt;p&gt;A while ago I decided to unretire my &lt;a href="http://www.everymac.com/systems/apple/macbook/specs/macbook_2.0_white.html"&gt;2006 Macbook&lt;/a&gt; and turn it into a low powered server. Specifically to run a &lt;a href="http://www.synchro.net/"&gt;BBS&lt;/a&gt;, but more on that in a later blog post. To get FreeBSD running properly requires a bit of trickery, so i decided to write a little howo to save you some time and effort. For this you will need the following:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Perquisites&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A FreeBSD install DVD burned with the &lt;a href="http://ftp.freebsd.org/pub/FreeBSD/releases/ISO-IMAGES/10.1/FreeBSD-10.1-RELEASE-i386-dvd1.iso"&gt;i386 image&lt;/a&gt; as we're dealing with a 32 bit core duo machine here. If you're into that sort of think you can also create a &lt;a href="http://www.sysarchitects.com/using-mac-os-x-106-create-bootable-freebsd-81-installer-usb-memory-stick"&gt;FreeBSD USB stick&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;The OS X Tiger (10.4) Install DVD&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Now for the fun part:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Insert DVD/USB stick into Macbook and boot&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Hold down the option key to choose to boot from the DVD/USB stick. The boot media should be displayed as "Windows" by the Mac boot manager&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install FreeBSD with default partitions and whichever options you want&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;With 10.1 I kept getting a&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight shell"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;No bootable device -- insert boot disk and press any key
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href="http://www.beastielabs.net/freebsd-glitches.html"&gt;message on bootup&lt;/a&gt;. This can easily be fixed by exiting to the shell after the install and typing in&lt;/p&gt;

&lt;div class="highlight shell"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;/sbin/gpart &lt;span class="nb"&gt;set&lt;/span&gt; -a active adaX
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;where adaX is the boot partition. I think this is ada0s1 on the Macbook with the default partition options, but i'm not 100% sure. Please feel free to correct me in the comments if i'm wrong.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Exit and reboot. While rebooting hold down the left trackpad button to eject the DVD. Obviously if you're installing from USB this shouldn't be an issue. Insert the OS X Tiger install DVD and reboot again.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Hold down the C button during the chime to boot from the Tiger DVD. Once booted choose your language and then open the terminal (Utilities/Terminal). Now you need to bless the boot partition (Yes, the engineers at Apple have quite the ego). Type the following in the shell:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight shell"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;bless --device /dev/disk0s1 --setBoot --legacy
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Reboot again and you should be rewarded with the FreeBSD boot screen:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt="FreeBSD boot screen" alt="" width="717" height="403" src="images/bsdinstall-newboot-loader-menu-a4f18d1e.png" /&gt;&lt;/p&gt;

&lt;p&gt;Now pat yourself on the back for a job well done. You deserve it.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Pat yourself on the back" alt="" width="500" height="381" src="images/patontheback-f38bb763.gif" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>This Blog Now Has Comments. Let The Bitching Commence</title>
    <link rel="alternate" href="/2014/04/30/this-blog-now-has-comments-let-the-bitching-commence.html"/>
    <id>/2014/04/30/this-blog-now-has-comments-let-the-bitching-commence.html</id>
    <published>2014-04-29T23:38:00+00:00</published>
    <updated>2014-04-29T23:38:00+00:00</updated>
    <author>
      <name>Ryan Kes</name>
    </author>
    <content type="html">&lt;p&gt;Thanks to the magic of Disqus all three of you human beings that know of the existence of this blog (thanks for the kind words) can now leave comments. Aren't you boys lucky! Hasten yourselves to acquire the much coveted "first post" honor. &lt;/p&gt;

&lt;p&gt;Sadly as of the time of writing no t-shirts are available as prizes. The best I can offer is a special place in my thoughts, which should be a reward in and of itself. And of course bards will sing songs of your accomplishment for generations to come. You could very well be the man they called Jayneâ€¦&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Yet Another Generic "Middleman Powers My Blog" Post</title>
    <link rel="alternate" href="/2014/04/27/yet-another-generic-middleman-powers-my-blog-post.html"/>
    <id>/2014/04/27/yet-another-generic-middleman-powers-my-blog-post.html</id>
    <published>2014-04-27T19:55:00+00:00</published>
    <updated>2014-04-27T19:55:00+00:00</updated>
    <author>
      <name>Ryan Kes</name>
    </author>
    <content type="html">&lt;p&gt;It's almost compulsory when someone starts a new static blog to post a "what powers this" article, and who am I to break tradition? So here goes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Engine&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I've decided to use &lt;a href="http://middlemanapp.com/"&gt;Middleman&lt;/a&gt; with the &lt;a href="https://github.com/middleman/middleman-blog"&gt;blog extension&lt;/a&gt; rather than &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;. After doing some research (ie googling &lt;a href="https://www.google.nl/search?q=middleman+vs+jekyll"&gt;Middleman vs Jekyll&lt;/a&gt;) a lot of people seemed to prefer the former over the latter. &lt;/p&gt;

&lt;p&gt;As I had zero experience with static site generators I just decided to go with the flow (after all, when has that &lt;a href="http://en.wikipedia.org/wiki/Nazism"&gt;ever gone wrong&lt;/a&gt;) and am quite pleased with my decision. Despite having no Ruby experience at all setting everything up was pretty straightforward and uneventful. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Design&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For the &lt;a href="https://github.com/alrayyes/higherlearning.eu/tree/0.1"&gt;first version&lt;/a&gt; I decided to be a good developer and use &lt;a href="http://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt; as everyone else was using it. However in the mean time &lt;a href="http://foundation.zurb.com/"&gt;Foundation&lt;/a&gt; became the new cool kid on the block, so naturally i switched and haven't look back since. &lt;/p&gt;

&lt;p&gt;Even though it's supposed to be minimal, even someone like me with the aesthetic skill of a colour blind accountant is able to build something presentable. Ripping off a the design of the &lt;a href="http://foundation.zurb.com/templates/blog.html#"&gt;blog template&lt;/a&gt; and a couple &lt;a href="http://www.patricklenz.co/"&gt;of&lt;/a&gt; &lt;a href="http://zachholman.com/"&gt;sites&lt;/a&gt; slightly helped a lot too.&lt;/p&gt;

&lt;p&gt;For the templating itself I switched from &lt;a href="http://haml.info/"&gt;haml&lt;/a&gt; to &lt;a href="http://slim-lang.com/"&gt;slim&lt;/a&gt; as I found it a little less convoluted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hosting&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At first I contemplated hosting this on the &lt;a href="http://www.cloudvps.nl/openstack/object-store"&gt;CloudVps Object Store&lt;/a&gt; as I already rent a vps from them and am quite happy with their customer support. Also they're significantly cheaper than Amazon S3. Then the cheap little dutch boy in me overpowered my reasoning and forced my hand to host on &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; as it's free. Setting up the github side of things is &lt;a href="http://24ways.org/2013/get-started-with-github-pages/"&gt;pretty much idiot proof&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deployment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Middleman has a &lt;a href="https://github.com/neo/middleman-gh-pages"&gt;plugin&lt;/a&gt; to deploy to Github Pages, but rather than using that I decided to give &lt;a href="http://wercker.com/"&gt;Wercker&lt;/a&gt; a shot as I've heard good things and at the time of writing it's free. Setting up wercker to deploy your project to pages is &lt;a href="http://blog.wercker.com/2013/07/25/Using-wercker-to-publish-to-GitHub-pages.html"&gt;pretty straight forward as well&lt;/a&gt;. The &lt;a href="https://github.com/alrayyes/higherlearning.eu/blob/master/wercker.yml"&gt;wercker.yml&lt;/a&gt; config the blog uses is pretty straightforward:&lt;/p&gt;

&lt;div class="highlight yaml"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;pre class="lineno"&gt;2&lt;/pre&gt;&lt;pre class="lineno"&gt;3&lt;/pre&gt;&lt;pre class="lineno"&gt;4&lt;/pre&gt;&lt;pre class="lineno"&gt;5&lt;/pre&gt;&lt;pre class="lineno"&gt;6&lt;/pre&gt;&lt;pre class="lineno"&gt;7&lt;/pre&gt;&lt;pre class="lineno"&gt;8&lt;/pre&gt;&lt;pre class="lineno"&gt;9&lt;/pre&gt;&lt;pre class="lineno"&gt;10&lt;/pre&gt;&lt;pre class="lineno"&gt;11&lt;/pre&gt;&lt;pre class="lineno"&gt;12&lt;/pre&gt;&lt;pre class="lineno"&gt;13&lt;/pre&gt;&lt;pre class="lineno"&gt;14&lt;/pre&gt;&lt;pre class="lineno"&gt;15&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="s"&gt;box&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;wercker/ruby&lt;/span&gt;
&lt;span class="s"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# Execute the bundle install step, a step provided by wercker&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;bundle-install&lt;/span&gt;
        &lt;span class="c1"&gt;# Execute a custom script step.&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;middleman build&lt;/span&gt;
            &lt;span class="s"&gt;code&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bundle exec middleman build --verbose&lt;/span&gt;
&lt;span class="s"&gt;deploy&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;steps&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;lukevivier/gh-pages&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="s"&gt;token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$GIT_TOKEN&lt;/span&gt;
        &lt;span class="s"&gt;basedir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;build&lt;/span&gt;
        &lt;span class="s"&gt;domain&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;higherlearning.eu&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;There isn't really much more to say. Hopefully in the future new articles will be a bit more technical and a little less explaining the painfully obvious and trivial.&lt;/p&gt;
</content>
  </entry>
</feed>
